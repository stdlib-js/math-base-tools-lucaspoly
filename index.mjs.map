{"version":3,"file":"index.mjs","sources":["../lib/cache.js","../lib/coefficients.js","../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar cache = {};\n\n\n// EXPORTS //\n\nexport default cache;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport binomcoef from '@stdlib/math-base-special-binomcoef' ;\nimport floor from '@stdlib/math-base-special-floor' ;\nimport ceil from '@stdlib/math-base-special-ceil' ;\nimport cache from './cache.js' ;\n\n\n// MAIN //\n\n/**\n* Computes polynomial coefficients.\n*\n* ## Notes\n*\n* -   Coefficients are computed via a (1,2)-Pascal triangle (i.e., Lucas triangle). For more details, see [Lucas polynomials][oeis-lucas-polynomials] and [Lucas triangle][oeis-lucas-triangle].\n*\n* [oeis-lucas-polynomials]: https://oeis.org/wiki/Lucas_polynomials\n* [oeis-lucas-triangle]: https://oeis.org/wiki/Lucas_triangle\n*\n* @private\n* @param {NonNegativeInteger} n - Lucas polynomial for which to compute coefficients\n* @returns {NonNegativeIntegerArray} polynomial coefficients\n*/\nfunction coefficients( n ) {\n\tvar coefs;\n\tvar half;\n\tvar high;\n\tvar low;\n\tvar p;\n\tvar a;\n\tvar b;\n\tvar m;\n\tvar i;\n\n\tcoefs = cache[ n ];\n\tif ( coefs === void 0 ) {\n\t\tm = n + 1;\n\t\tcoefs = new Array( m );\n\t\tif ( n === 0 ) {\n\t\t\tcoefs[ 0 ] = 2.0;\n\t\t} else {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tcoefs[ i ] = 0.0;\n\t\t\t}\n\t\t\thalf = n / 2;\n\t\t\thigh = ceil( half );\n\t\t\tlow = floor( half );\n\t\t\tfor ( i = 0; i <= low; i++ ) {\n\t\t\t\tp = (2*i) + (n%2);\n\t\t\t\ta = 2.0 * binomcoef( high+i-1, low-i-1 );\n\t\t\t\tb = binomcoef( high+i-1, low-i );\n\t\t\t\tcoefs[ p ] += a + b;\n\t\t\t}\n\t\t}\n\t\t// Memoize the coefficients:\n\t\tcache[ n ] = coefs;\n\t}\n\treturn coefs;\n}\n\n\n// EXPORTS //\n\nexport default coefficients;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport evalpoly from '@stdlib/math-base-tools-evalpoly' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport coefficients from './coefficients.js' ;\n\n\n// MAIN //\n\n/**\n* Evaluates a Lucas polynomial.\n*\n* @param {integer} n - Lucas polynomial to evaluate\n* @param {number} x - value at which to evaluate a Lucas polynomial\n* @returns {number} result\n*\n* @example\n* var v = lucaspoly( 5, 1.0 );\n* // returns 11.0\n*/\nfunction lucaspoly( n, x ) {\n\tvar coefs;\n\tvar an;\n\tvar v;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tv = evalpoly( coefs, x );\n\tif ( n >= 0 ) {\n\t\treturn v;\n\t}\n\treturn pow( -1.0, an ) * v;\n}\n\n\n// EXPORTS //\n\nexport default lucaspoly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { factory as evalpoly } from '@stdlib/math-base-tools-evalpoly' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport coefficients from './coefficients.js' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating a Lucas polynomial.\n*\n* @param {integer} n - Lucas polynomial to evaluate\n* @returns {Function} function for evaluating a Lucas polynomial\n*\n* @example\n* var polyval = factory( 5 );\n*\n* var v = polyval( 1.0 );\n* // returns 11.0\n*\n* v = polyval( 2.0 );\n* // returns 82.0\n*/\nfunction factory( n ) {\n\tvar coefs;\n\tvar an;\n\tvar f;\n\tvar s;\n\n\tan = abs( n );\n\tcoefs = coefficients( an );\n\n\tf = evalpoly( coefs );\n\ts = pow( -1.0, an );\n\tif ( n >= 0 || s === 1.0 ) {\n\t\treturn f;\n\t}\n\treturn polyval;\n\n\t/**\n\t* Evaluates a Lucas polynomial.\n\t*\n\t* @private\n\t* @param {number} x - value at which to evaluate a Lucas polynomial\n\t* @returns {number} result\n\t*/\n\tfunction polyval( x ) {\n\t\treturn -1.0 * f( x );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate a Lucas polynomial.\n*\n* @module @stdlib/math-base-tools-lucaspoly\n*\n* @example\n* import lucaspoly from '@stdlib/math-base-tools-lucaspoly' ;\n*\n* var v = lucaspoly( 5, 1.0 );\n* // returns 11.0\n*\n* @example\n* import { factory as factory } from '@stdlib/math-base-tools-lucaspoly' ;\n*\n* var polyval = factory( 5 );\n*\n* var v = polyval( 1.0 );\n* // returns 11.0\n*\n* v = polyval( 2.0 );\n* // returns 82.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["cache","coefficients","n","coefs","half","high","low","p","a","b","m","i","Array","ceil","floor","binomcoef","lucaspoly","x","an","v","abs","evalpoly","pow","factory","f","s","setReadOnly","main"],"mappings":";;iqBAsBA,IAAIA,EAAQ,GCsBZ,SAASC,EAAcC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,QAAe,KADfR,EAAQH,EAAOE,IACS,CAGvB,GAFAQ,EAAIR,EAAI,EACRC,EAAQ,IAAIS,MAAOF,GACR,IAANR,EACJC,EAAO,GAAM,MACP,CACN,IAAMQ,EAAI,EAAGA,EAAID,EAAGC,IACnBR,EAAOQ,GAAM,EAKd,IAFAN,EAAOQ,EADPT,EAAOF,EAAI,GAEXI,EAAMQ,EAAOV,GACPO,EAAI,EAAGA,GAAKL,EAAKK,IACtBJ,EAAK,EAAEI,EAAMT,EAAE,EACfM,EAAI,EAAMO,EAAWV,EAAKM,EAAE,EAAGL,EAAIK,EAAE,GACrCF,EAAIM,EAAWV,EAAKM,EAAE,EAAGL,EAAIK,GAC7BR,EAAOI,IAAOC,EAAIC,EAIpBT,EAAOE,GAAMC,EAEd,OAAOA,ECrCR,SAASa,EAAWd,EAAGe,GACtB,IAAId,EACAe,EACAC,EAMJ,OAHAhB,EAAQF,EADRiB,EAAKE,EAAKlB,IAGViB,EAAIE,EAAUlB,EAAOc,GAChBf,GAAK,EACFiB,EAEDG,GAAM,EAAKJ,GAAOC,ECR1B,SAASI,EAASrB,GACjB,IAAIC,EACAe,EACAM,EACAC,EAOJ,OAJAtB,EAAQF,EADRiB,EAAKE,EAAKlB,IAGVsB,EAAIH,EAAUlB,GACdsB,EAAIH,GAAM,EAAKJ,GACVhB,GAAK,GAAW,IAANuB,EACPD,EAWR,SAAkBP,GACjB,OAAQ,EAAMO,EAAGP,ICjBnBS,EAAAC,EAAA,UAAAJ"}